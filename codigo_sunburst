grupobio_a_especie = (
    snib_lazy_df
    .select([
        "reinovalido",
        "phylumdivisionvalido",
        "clasevalida",
        "ordenvalido",
        "familiavalida",
        "generovalido"
    ])
)
df_reducido = grupobio_a_especie.filter(
    (pl.col("reinovalido").is_not_null()) & (pl.col("reinovalido") != "")
)
resultado_lazy = (
    df_reducido
    .group_by([
        "reinovalido",
        "phylumdivisionvalido",
        "clasevalida",
        "ordenvalido",
        "familiavalida",
        "generovalido"
    ])
    .agg([
        pl.len().alias("cantidad")
    ])
)
top_generos = (
    resultado_lazy.lazy()
    .sort("cantidad", descending=True)
    .head(1000)  # toma los 1000 más grandes
    .collect()
)
# Convertir Polars a diccionario de listas
data_dict = top_generos.to_dicts()  # devuelve lista de diccionarios
# Crear el Sunburst
fig = px.sunburst(
    data_dict,
    path=[
        "reinovalido",
        "phylumdivisionvalido",
        "clasevalida",
        "ordenvalido",
        "familiavalida",
        "generovalido"
    ],
    values="cantidad",
    title="Distribución taxonómica de registros válidos del SNIB (Reino a Género)",
    width=1200,
    height=800,
    hover_data={
        "reinovalido": True,
        "phylumdivisionvalido": True,
        "clasevalida": True,
        "ordenvalido": True,
        "familiavalida": True,
        "generovalido": True,
    }
)

fig.update_traces(
    textinfo="label+value",  # mostrar etiqueta + cantidad
    hovertemplate=(
        "<b>Reino:</b> %{customdata[0]}<br>"
        "<b>Phylum:</b> %{customdata[1]}<br>"
         "<b>Divisón:</b> %{customdata[1]}<br>"
        "<b>Clase:</b> %{customdata[2]}<br>"
        "<b>Orden:</b> %{customdata[3]}<br>"
        "<b>Familia:</b> %{customdata[4]}<br>"
        "<b>Género:</b> %{customdata[5]}<br>"
        "<b>Cantidad:</b> %{value}<extra></extra>"
    )
)

#  Ajustes
fig.update_layout(
    title_font_size=24,
    uniformtext=dict(minsize=12, mode='hide')
)

fig.show()